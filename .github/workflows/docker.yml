# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  
  pull_request:
    types: [closed]
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.jss release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - name: PM2 INSTALL
      run: npm i pm2@latest -g
    - name: Login to Docker hub
      uses: docker/login-action@v3
      with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}


    - name: build and push docker image
      uses: docker/build-push-action@v2
      with:
        context:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/clockbox:${{github.sha}}


    - name: Deploy to Server 1
      uses: appleboy/ssh-action@master
      with:
        
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        target: ${{ secrets.TARGET_DIR }}
        script: |
         sudo docker stop clock || true
         sudo docker rm clock || true
         sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/clockbox:${{github.sha}}
         sudo docker run -d --name clock -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/clockbox:${{github.sha}}



    
    
          
    
